% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/predict.ECC.R
\name{predict.ECC}
\alias{predict.ECC}
\title{Classify new samples using an Ensemble of Classifier Chains}
\usage{
\method{predict}{ECC}(object, newdata, n.iters = 300, burn.in = 100,
  thin = 2, parallel = TRUE, silent = FALSE, FUN = NULL, ...)
}
\arguments{
\item{object}{An object of type \code{ECC} returned by \code{\link{train_ecc}}.}

\item{newdata}{A data frame or matrix of features. Must be the same form as
the one used with \code{train_ecc}.}

\item{n.iters}{Number of iterations of the Gibbs sampler.}

\item{burn.in}{Number of iterations for adaptation (burn-in).}

\item{thin}{Thinning interval.}

\item{parallel}{Whether to utilize multicore capabilities of the system.}

\item{silent}{Whether to print progress messages to console. Recommended.}

\item{FUN}{User-supplied prediction function that corresponds to the type of
classifier that was trained in the \code{train_ecc} step. See Details below.}

\item{...}{additional arguments to pass to \code{FUN}.}
}
\value{
An object of class \code{PUGS} containing: \itemize{
 \item \code{y_labels} : inherited from \code{object}
 \item \code{preds} : A burnt-in, thinned multi-dimensional array of predictions.
}
}
\description{
Uses a trained ECC and Gibbs sampling to predict labels for new samples.
}
\details{
\code{FUN} must return a matrix of probabilities, one row for each observation in \code{newdata}.
}
\examples{
\dontrun{

  y.pred <- train_ecc(x, y) \%>\% predict(x.new)

  y.pred <- train_ecc(x, y, FUN = foo_train) \%>\%
    predict(x.new, FUN = foo_predict)

  y.pred <- train_ecc(x, y, FUN = C50::C5.0) \%>\%
    predict(x.new,C50::predict.C5.0,type = "prob")

  y.pred <- train_ecc(x, y, FUN = randomForest::randomForest) \%>\%
    predict(x.new, n.iters = 1000, burn.in = 100, thin = 10,
            FUN = function(rF,newdata){
              randomForest:::predict.randomForest(rF,newdata,type="prob")
             })
}
}

